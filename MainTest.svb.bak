'USEUNIT LayoutDialog
'USEUNIT CommonFunction

Sub MainTest

	Log.AppendFolder("Open Ellipses menu on the toolbar – click on icon")
		strMenuItem = "Inventory Status Code" ' "Sales Order"
		strQADSystemDefault = "QAD System Default"
		strDesignLayout = "DESIGN_LAYOUT"

		' ' Open pop-up window “Select a Design Layout”
		' Log.AppendFolder("Open pop-up window “Select a Design Layout”")
		' 	Call WEBUI.NavigationBarQAD.SelectMenu(strMenuItem,"")
		' 	Call WEBUI.ToolbarQAD.ClickToolBarBtn("edit")
		' 	Call WEBUI.ToolbarQAD.ClickToolBarDropDown("more", "qDesignLayoutToolbarButton")
		' Log.PopLogFolder
		' ' Check if pop-up window “Select a Design Layout” is OPEN
		' Log.AppendFolder("Check if pop-up window “Select a Design Layout” is OPEN")
		' 	Set objDialog = FindDialog("qDesignLayoutSelectDialog")
		' 	If objDialog.Exists Then 
		' 		Log.Message("Pop-up window “Select a Design Layout” is OPEN")
		' 	Else
		' 		Log.Warning("Pop-up window “Select a Design Layout” is NOT OPEN")
		' 	End If
		' Log.PopLogFolder
		' ' Check that “QAD System Default” is highlighted by default
		' Log.AppendFolder("Check that “QAD System Default” is highlighted by default")
		' 	Set objTable = HTML.FindChildMethods.FromParent_Proximity1(objDialog, "idStr", "qadLDLayoutList", 2)
		' 	strDefLayoutClass = objTable.Cell(1, 0).parentElement.className
		' 	If InStr(strDefLayoutClass, "selected") <> 0 Then
		' 		Log.Message("“QAD System Default” is highlighted by default")
		' 	Else
		' 		Log.Warning("“QAD System Default” is NOT highlighted by default")
		' 	End if
		' Log.PopLogFolder
		' ' Check that it is possible to highlight other layout available in the list (if any) by click on it
		' Log.AppendFolder("Check that it is possible to highlight other layout")
		' 	' Check if at least one item is exists
		' 	If objTable.RowCount > 0 Then 
		' 		' Check if more than one item.
		' 		If objTable.RowCount > 2 Then 
		' 			' Check if more than one item in the 1st category.
		' 			If objTable.firstElementChild.childElementCount > 2 Then 
		' 				' If more than one item in the 1st category, we click on the second item in the 1st category
		' 				Set objTableCell = objTable.Cell(2, 0)
		' 				objTableCell.Click()
		' 			Else 
		' 				' If only one item in the 1st category, we click on the 1st item in the second category
		' 				Set objTableCell = objTable.Cell(3, 0)
		' 				objTableCell.Click()
		' 			End if
		' 			' Check that it is possible to highlight other layout available in the list (if any) by click on it
		' 			If InStr(objTableCell.parentElement.className, "selected") <> 0 Then
		' 				Log.Message("Other layout is highlighted by click on it")
		' 			Else
		' 				Log.Warning("Other layout is NOT highlighted by click on it")
		' 			End if
		' 		Else 
		' 			Log.Message("Other layout is NOT EXISTS")
		' 		End if
		' 	Else 
		' 		Log.Warning("Layouts is NOT EXISTS")
		' 	End if
		' Log.PopLogFolder
		' ' Select “QAD System Default” (if not selected) to start editing and click on “Continue” button
		' Log.AppendFolder("Select “QAD System Default” to start editing and click on “Continue” button")
		' 	Set objTableCell = objTable.Cell(1, 0)
		' 	objTableCell.Click()
		' 	Set btnName = HTML.ButtonQAD.FindButton_Proximity3(objDialog, "qadLDSubmitBtn")
		' 	Call HTML.ButtonQAD.ClickBtn(btnName)
		' Log.PopLogFolder
		' ' Checks if the correct URL after the submmit.
		' Log.AppendFolder("Checks if the correct URL after the submmit.")
		' 	If NOT objDialog.Exists Then 
		' 		Log.Message("Select Layout Dialog is CLOSED")
		' 	Else
		' 		Log.Warning("Select Layout Dialog is NOT CLOSED")
		' 	End If
			Set objPage = Sys.Browser("*").Page("*")
		' 	If CheckSelectedLayout(UrlDecode(objPage.URL), strQADSystemDefault) Then
		' 		Log.Message("URL is CORRECT")
		' 	Else
		' 		Log.Warning("URL is NOT CORRECT")
		' 	End If
		' Log.PopLogFolder
		' Check that information on the toolbar has changed.
		Log.AppendFolder("Check that information (“Design Layout”) on the toolbar has changed.")
			' Check that information (“Design Layout”) on the toolbar has changed.
			Log.AppendFolder("Check that information (“Design Layout”, Separator) on the toolbar has changed.")
				Set objMainContainer = HTML.PanelQAD.FindPanel_Proximity1(objPage, "qMainContainer")
				Set objViewContainer = HTML.PanelQAD.FindPanel_Proximity1(objMainContainer, "QADViewContainer")
				Set objToolbar =  HTML.PanelQAD.FindPanel_Proximity1(objViewContainer, "KToolBar_DesignToolbar")
				Set objSeparator = HTML.FindChildMethods.FromParent_Proximity1(objToolbar, "idStr", "toolBarSchemaItemSeparatorBefore0", 2)
				If objSeparator.Exists Then
					Log.Message("Separator is EXISTS")
					Set objDesignLayout = HTML.FindChildMethods.FromParent_Proximity1(objToolbar, "idStr", "idDesignLayout", 2).Panel(0)
					Log.Message(Trim(objDesignLayout.innerText))
					Log.Message(strDesignLayout)
					If StrComp(Trim(objDesignLayou.innerText), strDesignLayout, 1) = 0 Then
						log.Message("Information “Design Layout” on the toolbar is CORRECT")
					Else
						log.Warning("Information “Design Layout” on the toolbar is NOT CORRECT")
					End if
				Else 
					Log.Warning("Separator is NOT EXISTS")
				End if

			Log.PopLogFolder
			' Check that name of the selected layout (“QAD System Default” ) on the toolbar has changed.
			Log.AppendFolder("Check that name of the selected layout on the toolbar is correct")
				Set btnToolbarSelectLayout = HTML.FindChildMethods.FromParent_Proximity1(objToolbar, "idStr", "qSelectLayoutToolbarButton", 2)
				If btnToolbarSelectLayout.TextNode(1).innerText() = strQADSystemDefault Then
					Log.Message("Name of the selected layout on the toolbar is CORRECT")
				Else
					Log.Warning("Name of the selected layout on the toolbar is NOT CORRECT")
				End If
			Log.PopLogFolder
			' Check that the background has changed into Grid mode
			Log.AppendFolder("Check that the background has changed into Grid mode")
				Set objWorkArea = HTML.PanelQAD.FindPanel_Proximity1(objViewContainer, "qDesignLayoutWrapper")
				strBGFileName = getStyle(objWorkArea.Section(0), "background-image")
				' strBGFileName = Replace(Replace(strBGFileName, """)", ""), "url(""", "")
				If (NOT strBGFileName = "none") AND (NOT strBGFileName = "") Then 
					Log.Message("Background has changed into Grid mode")
				Else 
					Log.Warning("Background has NOT changed into Grid mode")
				End if
			Log.PopLogFolder
		Log.PopLogFolder

	Log.PopLogFolder
End sub

' Sub SelectLayoutDialogCheking

' 	Dim idStrDialog, MenuItem
' 	idStrDialog = "qDesignLayoutSelectDialog"
' 	MenuItem = "Sales Order"

' 	Log.AppendFolder("Check all rows in the "&idStrDialog)
' 		Call WEBUI.NavigationBarQAD.SelectMenu(MenuItem,"")
' 		Call WEBUI.ToolbarQAD.ClickToolBarBtn("edit")
' 		Call WEBUI.ToolbarQAD.ClickToolBarDropDown("more","qDesignLayoutToolbarButton")
' 		Call LayoutDialog.SLDRowsChecking(FindDialog(idStrDialog))
' 	Log.PopLogFolder

' 	' Check CloseBtn
' 	Log.AppendFolder("Check CloseBtn in the "&idStrDialog)
'     Set objDialog = FindDialog(idStrDialog)
' 	Set btnName = HTML.ButtonQAD.FindButton_Proximity3(objDialog, "qadLDCloseBtn")
'     Call HTML.ButtonQAD.ClickBtn(btnName)
' 		If NOT objDialog.Exists Then 
' 			Log.Message("Select Layout Dialog is CLOSED")
' 		Else
' 			Log.Warning("Select Layout Dialog is NOT CLOSED")
' 		End If
' 	Log.PopLogFolder

' 	' Check CancelBtn
' 	Log.AppendFolder("Check CancelBtn in the "&idStrDialog)
' 		Call WEBUI.ToolbarQAD.ClickToolBarDropDown("more","qDesignLayoutToolbarButton")
'     Set objDialog = FindDialog(idStrDialog)
' 		Set btnName = HTML.ButtonQAD.FindButton_Proximity3(objDialog, "qadLDCancelBtn")
'       	Call HTML.ButtonQAD.ClickBtn(btnName)
' 		If NOT objDialog.Exists Then 
' 			Log.Message("Select Layout Dialog is CLOSED")
' 		Else 
' 			Log.Warning("Select Layout Dialog is NOT CLOSED")
' 		End If
' 	Log.PopLogFolder

' 	' Check Continue
' 	Log.AppendFolder("Check ContinueBtn in the "&idStrDialog)
' 		Call WEBUI.ToolbarQAD.ClickToolBarDropDown("more","qDesignLayoutToolbarButton")
' 		Call LayoutDialog.SLDContinueChecking(idStrDialog, MenuItem, 2)
' 	Log.PopLogFolder
    
' End sub